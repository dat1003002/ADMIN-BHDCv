@model X.PagedList.IPagedList<AspnetCoreMvcFull.ModelDTO.Product.ProductStandardDTO>
@using X.PagedList.Mvc.Core
@using X.PagedList

@{
    ViewData["Title"] = "Product Standard CB";
}

<div class="d-flex justify-content-between align-items-center">
    <div class="nav-align-top">
        <ul class="nav nav-pills flex-column flex-md-row mb-6">
            <li class="nav-item">
                <a class="nav-link @(ViewContext.RouteData.Values["Action"].ToString() == "ProductStandard" ? "active" : "")"
                   asp-controller="ProductStandard" asp-action="ProductStandard">MHE</a>
            </li>
            <li class="nav-item">
                <a class="nav-link @(ViewContext.RouteData.Values["Action"].ToString() == "ListProductStandardCTL" ? "active" : "")"
                   asp-controller="ProductStandard" asp-action="ListProductStandardCTL">CTL</a>
            </li>
            <li class="nav-item">
                <a class="nav-link @(ViewContext.RouteData.Values["Action"].ToString() == "ListProductStandardCB" ? "active" : "")"
                   asp-controller="ProductStandard" asp-action="ListProductStandardCB">CB</a>
            </li>
            <li class="nav-item">
                <a class="nav-link @(ViewContext.RouteData.Values["Action"].ToString() == "ListProductStandardMS" ? "active" : "")"
                   asp-controller="ProductStandard" asp-action="ListProductStandardMS">MS</a>
            </li>
        </ul>
    </div>
    <div class="d-flex justify-content-end align-items-center">
        <form asp-controller="ProductStandard" asp-action="SearchProductStandardCB" method="post" style="display: flex; align-items: center; margin-right: 20px;">
            <div style="display: inline-flex; border: 1px solid #ccc; border-radius: 2px; overflow: hidden;">
                <input type="hidden" name="page" value="@Model.PageNumber" />
                <input type="text" name="name" placeholder="Nhập tên sản phẩm để tìm kiếm" style="border: none; padding: 5px 8px; font-size: 14px; width: 250px; height: 30px; outline: none;" required value="@ViewData["SearchTerm"]" />
                <button type="submit" style="padding: 5px 12px; background-color: #428BCA; color: white; border: none; cursor: pointer; font-size: 14px; height: 30px; outline: none;">
                    Tìm kiếm
                </button>
            </div>
        </form>
    </div>
</div>

<div class="container mt-4">
    @if (!Model.Any() && !string.IsNullOrEmpty(ViewData["SearchTerm"]?.ToString()))
    {
        <div style="text-align: center; color: #B74635; font-size: 16px; margin-bottom: 20px;">
            Không tìm thấy sản phẩm nào với từ khóa "@ViewData["SearchTerm"]".
        </div>
    }

    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Tên Sản Phẩm</th>
                <th>Ảnh</th>
                <th>Hành Động</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.name</td>
                    <td>
                        @if (!string.IsNullOrEmpty(item.image))
                        {
                            <img src="@Url.Content("~/images/" + item.image)" style="width: 100px; height: 100px; object-fit: cover;" />
                        }
                    </td>
                    <td>
                        <a asp-action="EditProductStandard" asp-route-id="@item.ProductId" class="btn btn-primary btn-sm">Sửa</a>
                        <button onclick="loadProduct(@item.ProductId)" class="btn btn-info btn-sm">Xem</button>
                        <button onclick="deleteProduct(@item.ProductId)" class="btn btn-danger btn-sm">Xóa</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @Html.PagedListPager(Model, page => Url.Action("ListProductStandardCB", new { page }), new PagedListRenderOptions
    {
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always,
        MaximumPageNumbersToDisplay = 5
    })

    <div class="modal fade" id="modalScrollable" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable" role="document" style="max-width: 100%; width: 100%; height: 100%; margin: 0;">
            <div class="modal-content" style="height: 100%; border-radius: 0;">
                <div class="modal-body" id="modalBody" style="text-align: center; padding: 10px"></div>
                <div class="modal-footer" style="background-color: transparent; border-top: none; position: absolute; bottom: 0; width: 100%; z-index: 10;">
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Đóng</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function deleteProduct(productId) {
        if (confirm("Bạn có chắc chắn muốn xóa sản phẩm này không?")) {
            $.ajax({
                url: '@Url.Action("DeleteProductStandard", "ProductStandard")',
                type: 'POST',
                data: { ProductId: productId },
                success: function (result) {
                    alert("Sản phẩm đã được xóa thành công!");
                    location.reload();
                },
                error: function (xhr, status, error) {
                    alert("Có lỗi xảy ra: " + xhr.responseText);
                }
            });
        }
    }

    function loadProduct(productId) {
        $.ajax({
            url: '@Url.Action("ShowProductStandard", "ProductStandard")',
            type: 'GET',
            data: { id: productId },
            success: function (data) {
                $('#modalBody').html(data);
                $('#modalScrollable').modal('show');
            },
            error: function () {
                alert('Có lỗi xảy ra khi tải dữ liệu sản phẩm.');
            }
        });
    }
</script>
